@use "sass:math";

@font-face {
    font-family: Latinaires;
    font-weight: 400;
    font-style: normal;
    font-variant: normal;
    src: url("./fonts/LatinairesPro-Regular.woff2") format("woff2"),
        url("./fonts/LatinairesPro-Regular.woff") format("woff");
    font-display: swap;
}

@font-face {
    font-family: Latinaires;
    font-weight: 500;
    font-style: normal;
    font-variant: normal;
    src: url("./fonts/LatinairesProSC-Regular.woff2") format("woff2"),
        url("./fonts/LatinairesProSC-Regular.woff") format("woff");
    font-display: swap;
}

@font-face {
    font-family: Icons;
    src: url('fonts/icomoon.eot?ww2sau');
    src: url('fonts/icomoon.eot?ww2sau#iefix') format('embedded-opentype'),
        url('fonts/icomoon.ttf?ww2sau') format('truetype'),
        url('fonts/icomoon.woff?ww2sau') format('woff'),
        url('fonts/icomoon.svg?ww2sau#icomoon') format('svg');
    font-weight: normal;
    font-style: normal;
    font-display: block;
}

%font-icon {
    font-family: Icons !important;
    speak: never;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

%icon-mail::before {
    @extend %font-icon;
    content: "\1f4e8";
}

%icon-headphones::before {
    @extend %font-icon;
    content: "\1f3a7";
}

%icon-connection::before {
    @extend %font-icon;
    content: "\1f4f6";
}

%icon-phone1::before {
    @extend %font-icon;
    content: "\1f4de";
}

%icon-bubble::before {
    @extend %font-icon;
    content: "\1f4ad";
}

%icon-user::before {
    @extend %font-icon;
    content: "\1f464";
}

%icon-user-tie::before {
    @extend %font-icon;
    content: "\1f482";
}

%icon-arrow-right::before {
    @extend %font-icon;
    content: "\27a1";
}

%icon-instagram::before {
    @extend %font-icon;
    content: "\1f4f7";
}

%icon-sina-weibo::before {
    @extend %font-icon;
    content: "\1f5cc";
}

@function obtainViewportWidth($targetWidth, $baseWidth: 1300px) {
    @if ($targetWidth >= $baseWidth) {
        @error "Target width should be less than base width";
    }

    @return math.div($targetWidth * 100vw, $baseWidth);
}
